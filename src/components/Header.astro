---
import { Image } from 'astro:assets';

import logoWhite from '../assets/img/logo-se-w.svg';
import logoBlack from '../assets/img/logo-se-b.svg';
import LanguagePicker from './LanguagePicker.astro';
---
<header class="fixed w-full bg-gradient-to-b dark:from-stone-950 dark:via-stone-950/50 via-75% dark:to-stone-950/0 from-slate-50 via-stone-50/50 to-slate-50/0">
    <div class="flex flex-row justify-between items-center mx-auto w-full max-w-[1440px] pt-5 pb-6 px-5">
        <div class="brand relative w-[60px] h-[47px]">
            <span id="logo-light" class="logo-light opacity-0 transition-all duration-300">
                <Image src={logoWhite} alt="Logo de Sam Esteban" class="absolute top-0 left-0 w-full h-full object-contain object-center" />
            </span>
            <span id="logo-dark" class="logo-dark opacity-0 transition-all duration-300">
                <Image src={logoBlack} alt="Logo de Sam Esteban" class="absolute top-0 left-0 w-full h-full object-contain object-center" />
            </span>
        </div>
        <div class="menu-btn flex items-center justify-end gap-8">
            <LanguagePicker />
            <div class="flex flex-col justify-center ml-3">
                <button id="theme-toggle" type="button" class="text-stone-900 dark:text-stone-50 hover:text-stone-500 dark:hover:text-stone-400 focus:outline-none rounded-lg text-sm p-2.5 transition-all duration-150">
                    <svg id="theme-toggle-dark-icon" class="hidden size-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path></svg>
                    <svg id="theme-toggle-light-icon" class="hidden size-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" fill-rule="evenodd" clip-rule="evenodd"></path></svg>
                </button>
            </div>
            <a href="#" class="size-10 block dark:fill-stone-50 hover:dark:fill-stone-300 transition-all duration-150" data-role="toggle-menu" data-ref="mobile-menu">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M3 4H21V6H3V4ZM9 11H21V13H9V11ZM3 18H21V20H3V18Z"></path></svg>
            </a>
        </div>
    </div>
</header>
<script>
    if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
        document.documentElement.classList.add('dark');
    } else {
        document.documentElement.classList.remove('dark')
    }

    const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
    const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');
    const logoDark = document.querySelectorAll('.logo-dark');
    const logoLight = document.querySelectorAll('.logo-light');

    // Change the icons inside the button based on previous settings
    if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
        themeToggleLightIcon.classList.remove('hidden');
        logoLight.forEach(logo => {
            logo.classList.remove('opacity-0');
        })
    } else {
        themeToggleDarkIcon.classList.remove('hidden');
        logoDark.forEach(logo => {
            logo.classList.remove('opacity-0');
        })
    }

    const themeToggleBtn = document.getElementById('theme-toggle');

    themeToggleBtn.addEventListener('click', function() {

        // toggle icons inside button
        themeToggleDarkIcon.classList.toggle('hidden');
        themeToggleLightIcon.classList.toggle('hidden');
        logoDark.forEach(logo => {
            logo.classList.toggle('opacity-0');
        })
        logoLight.forEach(logo => {
            logo.classList.toggle('opacity-0');
        })

        // if set via local storage previously
        if (localStorage.getItem('color-theme')) {
            if (localStorage.getItem('color-theme') === 'light') {
                document.documentElement.classList.add('dark');
                localStorage.setItem('color-theme', 'dark');
            } else {
                document.documentElement.classList.remove('dark');
                localStorage.setItem('color-theme', 'light');
            }

        // if NOT set via local storage previously
        } else {
            if (document.documentElement.classList.contains('dark')) {
                document.documentElement.classList.remove('dark');
                localStorage.setItem('color-theme', 'light');
            } else {
                document.documentElement.classList.add('dark');
                localStorage.setItem('color-theme', 'dark');
            }
        }
        
    });
</script>